
package models
{{$Mod :=.Mod}}
{{$Sep:= .Separate}}
import(
	"fmt"

	"github.com/olongfen/contrib/log"
	"github.com/sirupsen/logrus"
	{{if $Sep }}	{{- range .Structs}}
	_"{{$Mod}}/app/models/{{.PackageName}}"
	{{- end}}
	"{{$Mod}}/app/models/common"{{end}}
	"{{$Mod}}/app/setting"
	"gorm.io/gorm"
	"gorm.io/gorm/logger"
	"gorm.io/driver/clickhouse"
	"gorm.io/driver/mysql"
	"gorm.io/driver/postgres"
	"gorm.io/driver/sqlite"
	"gorm.io/driver/sqlserver"
)
func Init() {
	var (
		err            error
		dataSourceName string
		dialector      gorm.Dialector
	)
	{{if $Sep}}model_common.{{- end}}ModelLog = log.NewLogFile(log.ParamLog{Path: setting.Global.FilePath.LogDir + "/" + "models", Stdout: setting.DevEnv, P: setting.Global.FilePath.LogPatent})
	switch setting.Global.DB.Driver {
	case "postgres":
		dataSourceName = fmt.Sprintf("user=%s password=%s host=%s port=%s dbname=%s sslmode=disable", setting.Global.DB.Username,
			setting.Global.DB.Password, setting.Global.DB.Host, setting.Global.DB.Port, setting.Global.DB.DatabaseName)
		//dataSourceName = fmt.Sprintf("%s://%s:%s@%s:%s/%s?sslmode=disable", setting.Global.DB.Driver, setting.Global.DB.Username,
		//	setting.Global.DB.Password, setting.Global.DB.Host, setting.Global.DB.Port, setting.Global.DB.DatabaseName)
		dialector = postgres.Open(dataSourceName)
	case "mysql":
		dataSourceName = fmt.Sprintf("%s:%s@tcp(%s:%s)/%s?charset=utf8mb4&parseTime=True&loc=Local", setting.Global.DB.Username,
			setting.Global.DB.Password, setting.Global.DB.Host, setting.Global.DB.Port, setting.Global.DB.DatabaseName)
		dialector = mysql.Open(dataSourceName)
	case "sqlite":
		dialector = sqlite.Open(setting.Global.DB.Source)
	case "sqlserver":
		dataSourceName = fmt.Sprintf("%s://%s:%s@%s:%s?database=%s", setting.Global.DB.Driver, setting.Global.DB.Username,
			setting.Global.DB.Password, setting.Global.DB.Host, setting.Global.DB.Port, setting.Global.DB.DatabaseName)
		dialector = sqlserver.Open(dataSourceName)
	case "clickhouse":
		dataSourceName = fmt.Sprintf("tcp://%s:%sdatabase=%s&username=%s&password=%s&read_timeout=10&write_timeout=30", setting.Global.DB.Host, setting.Global.DB.Port,
			setting.Global.DB.DatabaseName, setting.Global.DB.Username, setting.Global.DB.Password)
		dialector = clickhouse.Open(dataSourceName)
	default:
		log.Fatalln("dose not support this sql driver >>> ", setting.Global.DB.Driver)
	}

	if {{if $Sep}}model_common.{{- end}}DB, err = gorm.Open(dialector, &gorm.Config{Logger: logger.New({{- if $Sep}}model_common.{{- end}}ModelLog, logger.Config{
		Colorful: true})}); err != nil {
		logrus.Fatal(err)
	}
	if setting.DevEnv {
		{{- if $Sep}}model_common.{{- end}}DB = {{- if $Sep}}model_common.{{- end}}DB.Debug()
		err = {{- if $Sep}}model_common.{{- end}}DB.AutoMigrate({{- if $Sep}}model_common.{{- end}}Tables...)
		if err != nil {
			panic(err)
		}
	}

	log.Infoln("database init success !")
}